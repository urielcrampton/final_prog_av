
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTUALIZA ADD_COLUMN AGREGA_LA_COLUMNA AGRUPANDO_POR ALTER_TABLE AND ASTERISK BETWEEN BORRA_DE_LA CAMBIA_LA_TABLA CAST COMMA CONTANDO COUNT CREATE_TABLE DEFAULT DELETE_FROM DE_LA_TABLA DISTINCT DONDE DROP_COLUMN DROP_TABLE ELIMINA_LA_COLUMNA ENTRE EQUAL EXISTS FLOAT FOREIGN_KEY FROM GREATER GREATER_EQUAL GROUP_BY HAVING ID IN INSERT_INTO INTEGER IS_NULL JOIN LESS LESS_EQUAL LIKE LIMIT LOS_DISTINTOS LOS_VALORES LPAREN METE_EN NOT_NULL NO_NULO NUMBER ON ORDER_BY PRIMARY_KEY RPAREN SELECT SEMICOLON SET SETEA STRING TODO TRAEME UNIQUE UPDATE VALUES VARCHAR WHEREquery : select_query\n             | insert_query\n             | update_query\n             | delete_query\n             | alter_queryselect_query : TRAEME TODO DE_LA_TABLA table_name DONDE condition\n                    | TRAEME LOS_DISTINTOS column_name DE_LA_TABLA table_name DONDE condition\n                    | TRAEME CONTANDO LPAREN TODO RPAREN DE_LA_TABLA table_name AGRUPANDO_POR column_name HAVING conditioninsert_query : METE_EN table_name LPAREN column_list RPAREN LOS_VALORES LPAREN value_list RPARENupdate_query : ACTUALIZA table_name SETEA column_name EQUAL value DONDE conditiondelete_query : BORRA_DE_LA table_name DONDE conditionalter_query : CAMBIA_LA_TABLA table_name AGREGA_LA_COLUMNA column_name data_type NO_NULO\n                   | CAMBIA_LA_TABLA table_name ELIMINA_LA_COLUMNA column_nametable_name : IDcolumn_name : IDcolumn_list : column_name COMMA column_listcolumn_list : column_namevalue_list : value COMMA value_listvalue_list : valuevalue : STRING\n             | NUMBERcondition : expression\n                 | expression AND conditionexpression : column_name EQUAL value\n                  | column_name GREATER value\n                  | column_name LESS value\n                  | column_name ENTRE value AND value\n                  | column_name LIKE valuedata_type : INTEGER\n                 | VARCHAR\n                 | FLOAT'
    
_lr_action_items = {'TRAEME':([0,],[7,]),'METE_EN':([0,],[8,]),'ACTUALIZA':([0,],[9,]),'BORRA_DE_LA':([0,],[10,]),'CAMBIA_LA_TABLA':([0,],[11,]),'$end':([1,2,3,4,5,6,22,35,36,39,56,62,63,64,65,66,67,69,70,71,79,80,82,86,],[0,-1,-2,-3,-4,-5,-15,-11,-22,-13,-6,-20,-21,-23,-24,-25,-26,-28,-12,-7,-10,-27,-9,-8,]),'TODO':([7,23,],[12,31,]),'LOS_DISTINTOS':([7,],[13,]),'CONTANDO':([7,],[14,]),'ID':([8,9,10,11,13,20,24,25,26,27,28,30,40,44,46,57,58,74,76,84,],[16,16,16,16,22,16,22,22,22,22,22,16,22,22,22,22,16,22,22,22,]),'DE_LA_TABLA':([12,21,22,42,],[20,30,-15,58,]),'LPAREN':([14,15,16,59,],[23,24,-14,73,]),'SETEA':([16,17,],[-14,25,]),'DONDE':([16,18,29,41,61,62,63,],[-14,26,40,57,74,-20,-21,]),'AGREGA_LA_COLUMNA':([16,19,],[-14,27,]),'ELIMINA_LA_COLUMNA':([16,19,],[-14,28,]),'AGRUPANDO_POR':([16,72,],[-14,76,]),'COMMA':([22,33,62,63,78,],[-15,44,-20,-21,83,]),'RPAREN':([22,31,32,33,60,62,63,77,78,85,],[-15,42,43,-17,-16,-20,-21,82,-19,-18,]),'EQUAL':([22,34,37,],[-15,45,47,]),'GREATER':([22,37,],[-15,48,]),'LESS':([22,37,],[-15,49,]),'ENTRE':([22,37,],[-15,50,]),'LIKE':([22,37,],[-15,51,]),'INTEGER':([22,38,],[-15,53,]),'VARCHAR':([22,38,],[-15,54,]),'FLOAT':([22,38,],[-15,55,]),'HAVING':([22,81,],[-15,84,]),'AND':([36,62,63,65,66,67,68,69,80,],[46,-20,-21,-24,-25,-26,75,-28,-27,]),'LOS_VALORES':([43,],[59,]),'STRING':([45,47,48,49,50,51,73,75,83,],[62,62,62,62,62,62,62,62,62,]),'NUMBER':([45,47,48,49,50,51,73,75,83,],[63,63,63,63,63,63,63,63,63,]),'NO_NULO':([52,53,54,55,],[70,-29,-30,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select_query':([0,],[2,]),'insert_query':([0,],[3,]),'update_query':([0,],[4,]),'delete_query':([0,],[5,]),'alter_query':([0,],[6,]),'table_name':([8,9,10,11,20,30,58,],[15,17,18,19,29,41,72,]),'column_name':([13,24,25,26,27,28,40,44,46,57,74,76,84,],[21,33,34,37,38,39,37,33,37,37,37,81,37,]),'column_list':([24,44,],[32,60,]),'condition':([26,40,46,57,74,84,],[35,56,64,71,79,86,]),'expression':([26,40,46,57,74,84,],[36,36,36,36,36,36,]),'data_type':([38,],[52,]),'value':([45,47,48,49,50,51,73,75,83,],[61,65,66,67,68,69,78,80,78,]),'value_list':([73,83,],[77,85,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select_query','query',1,'p_query','usql_parser.py',9),
  ('query -> insert_query','query',1,'p_query','usql_parser.py',10),
  ('query -> update_query','query',1,'p_query','usql_parser.py',11),
  ('query -> delete_query','query',1,'p_query','usql_parser.py',12),
  ('query -> alter_query','query',1,'p_query','usql_parser.py',13),
  ('select_query -> TRAEME TODO DE_LA_TABLA table_name DONDE condition','select_query',6,'p_select_query','usql_parser.py',18),
  ('select_query -> TRAEME LOS_DISTINTOS column_name DE_LA_TABLA table_name DONDE condition','select_query',7,'p_select_query','usql_parser.py',19),
  ('select_query -> TRAEME CONTANDO LPAREN TODO RPAREN DE_LA_TABLA table_name AGRUPANDO_POR column_name HAVING condition','select_query',11,'p_select_query','usql_parser.py',20),
  ('insert_query -> METE_EN table_name LPAREN column_list RPAREN LOS_VALORES LPAREN value_list RPAREN','insert_query',9,'p_insert_query','usql_parser.py',33),
  ('update_query -> ACTUALIZA table_name SETEA column_name EQUAL value DONDE condition','update_query',8,'p_update_query','usql_parser.py',38),
  ('delete_query -> BORRA_DE_LA table_name DONDE condition','delete_query',4,'p_delete_query','usql_parser.py',43),
  ('alter_query -> CAMBIA_LA_TABLA table_name AGREGA_LA_COLUMNA column_name data_type NO_NULO','alter_query',6,'p_alter_query','usql_parser.py',52),
  ('alter_query -> CAMBIA_LA_TABLA table_name ELIMINA_LA_COLUMNA column_name','alter_query',4,'p_alter_query','usql_parser.py',53),
  ('table_name -> ID','table_name',1,'p_table_name','usql_parser.py',61),
  ('column_name -> ID','column_name',1,'p_column_name','usql_parser.py',65),
  ('column_list -> column_name COMMA column_list','column_list',3,'p_column_list','usql_parser.py',69),
  ('column_list -> column_name','column_list',1,'p_column_list_single','usql_parser.py',73),
  ('value_list -> value COMMA value_list','value_list',3,'p_value_list','usql_parser.py',77),
  ('value_list -> value','value_list',1,'p_value_list_single','usql_parser.py',81),
  ('value -> STRING','value',1,'p_value','usql_parser.py',85),
  ('value -> NUMBER','value',1,'p_value','usql_parser.py',86),
  ('condition -> expression','condition',1,'p_condition','usql_parser.py',93),
  ('condition -> expression AND condition','condition',3,'p_condition','usql_parser.py',94),
  ('expression -> column_name EQUAL value','expression',3,'p_expression','usql_parser.py',104),
  ('expression -> column_name GREATER value','expression',3,'p_expression','usql_parser.py',105),
  ('expression -> column_name LESS value','expression',3,'p_expression','usql_parser.py',106),
  ('expression -> column_name ENTRE value AND value','expression',5,'p_expression','usql_parser.py',107),
  ('expression -> column_name LIKE value','expression',3,'p_expression','usql_parser.py',108),
  ('data_type -> INTEGER','data_type',1,'p_data_type','usql_parser.py',116),
  ('data_type -> VARCHAR','data_type',1,'p_data_type','usql_parser.py',117),
  ('data_type -> FLOAT','data_type',1,'p_data_type','usql_parser.py',118),
]
